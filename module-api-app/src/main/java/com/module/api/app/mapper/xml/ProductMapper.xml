<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.module.api.app.mapper.ProductMapper">

<!--开始-->

    <resultMap id="productResult" type="com.module.api.app.result.AppProductResult">
        <id column="pro_id" jdbcType="INTEGER" property="productId" />
        <result column="main_img" jdbcType="VARCHAR" property="mainImg" />
        <result column="product_name" jdbcType="VARCHAR" property="productName"/>
        <result column="desc_img" jdbcType="VARCHAR" property="descImg"/>
        <collection property="appProductSkuList" ofType="com.module.api.app.result.AppProductSkuResult" javaType="java.util.List">
            <id column="sku_id" jdbcType="INTEGER" property="skuId" />
            <result column="sku" jdbcType="INTEGER" property="sku" />
            <result column="marked_price" jdbcType="DECIMAL" property="markedPrice"/>
            <result column="fixed_price" jdbcType="DECIMAL" property="fixedPrice"/>
            <result column="reserve" jdbcType="INTEGER" property="reserve"/>
        </collection>
    </resultMap>

    <select id="getProductById" resultMap="productResult">
        SELECT
        app_product.id pro_id,
        main_img,
        name product_name,
        desc_img,
        app_product_sku.product_id product_id,
        app_product_sku.id sku_id,
        sku,
        marked_price,
        fixed_price,
        reserve
        FROM
        app_product
        LEFT JOIN app_product_sku ON app_product.id = product_id
        WHERE
        app_product.id = #{productId}
        AND app_product.STATUS = 0
        AND app_product_sku.deleted =0
        order by marked_price
    </select>

    <!--结束-->

    <select id="pageQuery" resultType="com.module.api.app.result.AppProductResult">
         SELECT
            p.id product_id,
            p.`name` product_name,
            p.main_img img_url
        FROM
            app_product p
        WHERE
            p.`status` = 0
        AND	p.product_type =#{typeId}
    </select>
    <select id="listProductType" resultType="com.module.api.app.result.AppProductTypeResult">
        SELECT
            t.id type_id,
            t.`name`
        FROM
            app_product_type t
        WHERE
            t.locked = 0
        AND t.deleted = 0
        ORDER BY t.sort
    </select>


    <select id="searchKeyWord" resultType="com.module.api.app.result.AppProductResult">
        select id product_id,name product_name from app_product where name like #{keyWord}
    </select>


    <select id="casualList" resultType="com.module.api.app.result.AppProductResult">
        select product_id,name product_name,num product_num,main_img,desc_img,pv from app_product app_pro right join
        app_product_addition_one app_pro_add on app_pro.id=app_pro_add.product_id where app_pro.status =0 ORDER BY app_pro_add.pv desc
    </select>


    <select id="findSkuReserve" resultType="java.lang.Integer">
        select IFNULL(sku.reserve,0)  from app_product_sku sku where sku.id=#{skuId}
    </select>

    <select id="countSkuEffective" resultType="java.lang.Integer">
        select count(1)  from app_product_sku sku where sku.id=#{skuId} and sku.deleted=0
    </select>

    <update id="cutSkuReserve" parameterType="com.module.api.app.query.ComputerProductPriceQuery">
        update app_product_sku sku set sku.reserve=sku.reserve-#{number},sku.version=sku.version+1 where sku.id=#{skuId} and sku.product_id=#{productId} and sku.reserve>=#{number} and sku.deleted=0
    </update>
</mapper>
